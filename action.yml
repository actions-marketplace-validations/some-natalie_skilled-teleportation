name: "Skilled Teleportation"
description: "Generate an archive of GitHub Actions to move to GitHub Enterprise Server."
author: "Natalie Somersall (@some-natalie)"
branding:
  color: green
  icon: book-open

inputs:
  sync_skills:
    description: "Whether to sync skills from the github.com/skills repository.  Set this to 'false' to skip Skills."
    default: "true"
    required: false
  list_file:
    description: "The list of additional skills to export."
    default: "extra-actions.txt"
    required: false

runs:
  using: "composite"
  steps:
    - name: "Checkout the repo"
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository }}
        token: ${{ github.token }}

    - name: "Setup actions-sync"
      shell: bash
      run: |
        # get the latest release
        curl \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ github.token }}" \
            https://api.github.com/repos/actions/actions-sync/releases/latest | \
        jq -r '.assets[].browser_download_url' | \
        grep "linux_amd64" | \
        xargs wget

        # untar the release
        tar -xzf *_linux_amd64.tar.gz

    - name: "Setup the cache directory"
      shell: bash
      run: |
        # Make a temp directory in the relative working directory
        mkdir -p tmp/

    - name: "Pull the GitHub Skills repositories"
      if: ${{ inputs.sync_skills }} = "true"
      shell: bash
      run: |
        # Sync all of github.com/skills
        curl -s https://api.github.com/orgs/skills/repos | jq -r '.[].full_name' | while read -r line ; do
            bin/actions-sync pull --cache-dir tmp/ --repo-name "$line"
        done

        # Sync dependencies for the Skills organization
        grep -v '^#' skills-dependencies.txt | grep . | while read -r line ; do
            bin/actions-sync pull --cache-dir tmp/ --repo-name "$line"
        done

    - name: "Pull any additional Actions repositories"
      if: ${{ inputs.list_file }}
      shell: bash
      run: |
        # Sync any additional Actions repositories
        grep -v '^#' ${{ inputs.list_file }} | grep . | while read -r line ; do
            bin/actions-sync pull --cache-dir tmp/ --repo-name "$line"
        done

    - name: "Copy the actions-sync utility into the cache dir"
      shell: bash
      run: |
        cp bin/actions-sync tmp/
        chmod +x tmp/actions-sync

    - name: "Copy in the push script"
      shell: bash
      run: |
        cp scripts/teleport-push.sh tmp/
        chmod +x tmp/teleport-push.sh

    - name: "Upload the zip archive"
      uses: actions/upload-artifact@v3
      with:
        name: "teleport-archive"
        path: |
          tmp/*
        if-no-files-found: error
